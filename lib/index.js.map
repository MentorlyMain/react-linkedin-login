{"version":3,"sources":["../src/index.js"],"names":["LinkedIn","restart","state","Math","random","toString","substring","clientId","props","scope","localStorage","linkedInReactLogin","linkedInReactLoginRedirectUri","window","location","href","redirectUri","code","callback","className","start","text","Component","propTypes","PropTypes","string","func","isRequired","node","arrayOf"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;IAEqBA,Q;;;;;;;;;;wCAUE;AACnB,WAAKC,OAAL;AACD;;;4BAGQ;AACP,UAAMC,QAAQC,KAAKC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,CAAd;AACA,UAAMC,WAAW,KAAKC,KAAL,CAAWD,QAA5B;AACA,UAAME,QAAQ,KAAKD,KAAL,CAAWC,KAAzB;AACAC,mBAAaC,kBAAb,GAAkCT,KAAlC;AACAQ,mBAAaE,6BAAb,GAA6CC,OAAOC,QAAP,CAAgBC,IAA7D;AACAF,aAAOC,QAAP,CAAgBC,IAAhB,GAAuB,sBAAO,EAAER,kBAAF,EAAYL,YAAZ,EAAmBO,YAAnB,EAAP,CAAvB;AACD;;;8BAGU;AACT,UAAMP,QAAQQ,aAAaC,kBAA3B;AACA,UAAMK,cAAcN,aAAaE,6BAAjC;AACA,UAAI,CAACI,WAAL,EAAkB;AAClB,UAAI,CAACd,KAAL,EAAY;AACZ,UAAIA,UAAU,iCAAkB,OAAlB,CAAd,EAA0C;AAC1C,UAAI,CAAC,iCAAkB,MAAlB,CAAL,EAAgC;AAChC,UAAMe,OAAO,iCAAkB,MAAlB,CAAb;AACA;AACA,WAAKT,KAAL,CAAWU,QAAX,CAAoB,EAACD,UAAD,EAAOD,wBAAP,EAApB;AACD;;;6BAES;AACR,aACE;AAAA;AAAA,UAAQ,WAAW,KAAKR,KAAL,CAAWW,SAA9B,EAAyC,SAAS,KAAKC,KAAvD;AACG,aAAKZ,KAAL,CAAWa;AADd,OADF;AAKD;;;EA3CmC,gBAAMC,S,WAEnCC,S,GAAY;AACjBhB,YAAU,gBAAMiB,SAAN,CAAgBC,MADT;AAEjBP,YAAU,gBAAMM,SAAN,CAAgBE,IAAhB,CAAqBC,UAFd;AAGjBR,aAAW,gBAAMK,SAAN,CAAgBC,MAHV;AAIjBJ,QAAM,gBAAMG,SAAN,CAAgBI,IAJL;AAKjBnB,SAAO,gBAAMe,SAAN,CAAgBK,OAAhB,CAAwB,gBAAML,SAAN,CAAgBC,MAAxC;AALU,C;kBAFAzB,Q","file":"index.js","sourcesContent":["import React from 'react'\nimport autobind from 'autobind-decorator'\nimport getURL from './getURL'\nimport getQueryParameter from './getQueryParameter'\nimport reset from './reset'\n/* global localStorage */\n\nexport default class LinkedIn extends React.Component {\n\n  static propTypes = {\n    clientId: PropTypes.string,\n    callback: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    text: PropTypes.node,\n    scope: PropTypes.arrayOf(PropTypes.string)\n  }\n\n  componentDidMount () {\n    this.restart()\n  }\n\n  @autobind\n  start () {\n    const state = Math.random().toString(36).substring(7)\n    const clientId = this.props.clientId\n    const scope = this.props.scope\n    localStorage.linkedInReactLogin = state\n    localStorage.linkedInReactLoginRedirectUri = window.location.href\n    window.location.href = getURL({ clientId, state, scope })\n  }\n\n  @autobind\n  restart () {\n    const state = localStorage.linkedInReactLogin\n    const redirectUri = localStorage.linkedInReactLoginRedirectUri\n    if (!redirectUri) return\n    if (!state) return\n    if (state !== getQueryParameter('state')) return\n    if (!getQueryParameter('code')) return\n    const code = getQueryParameter('code')\n    reset()\n    this.props.callback({code, redirectUri})\n  }\n\n  render () {\n    return (\n      <button className={this.props.className} onClick={this.start}>\n        {this.props.text}\n      </button>\n    )\n  }\n\n}\n"]}
